#include <stdlib.h>
using namespace std;

struct Node {
    int data;
    struct Node* next;
    Node(int x) {
        data = x;
        next = NULL;
    }
};


 // } Driver Code Ends
/* Structure of the linked list node is as
struct Node 
{
    int data;
    struct Node* next;
    Node(int x) { data = x;  next = NULL; }
};
*/

/* Function to mergesort the linked list
   It should return head of the modified list  */
Node* mergeSort(Node* head) {
    if(head==NULL || head->next==NULL)
    return head;
    
    Node *fast=head,*slow=head,*prev=NULL;
    while(fast and fast->next){
        prev=slow;
        slow=slow->next;
        fast=fast->next->next;
    }
    Node *first=head,*second;
    if(fast){
        second=slow->next;
        slow->next=NULL;
    }
    else{
        second=slow;
        prev->next=NULL;
    }
        
        
    Node *merged_l=mergeSort(first);
    Node *merged_r=mergeSort(second);
    
    Node *res=new Node(0);
    Node *ans=res,*temp;
    while(merged_l and merged_r){
        if(merged_l->data<merged_r->data){
            temp=new Node(merged_l->data);
            res->next=temp;
            res=res->next;
            merged_l=merged_l->next;
        }
        else{
            temp=new Node(merged_r->data);
            res->next=temp;
            res=res->next;
            merged_r=merged_r->next;
        }
    }
    while(merged_l){
        temp=new Node(merged_l->data);
            res->next=temp;
            res=res->next;
            merged_l=merged_l->next;
    }
    while(merged_r){
        temp=new Node(merged_r->data);
            res->next=temp;
            res=res->next;
            merged_r=merged_r->next;
    }
    return ans->next;
}


// { Driver Code Starts.

void printList(Node* node) {
    while (node != NULL) {
        printf("%d ", node->data);
        node = node->next;
    }
    printf("\n");
}

void push(struct Node** head_ref, int new_data) {
    Node* new_node = new Node(new_data);

    new_node->next = (*head_ref);
    (*head_ref) = new_node;
}

int main() {
    long test;
    cin >> test;
    while (test--) {
        struct Node* a = NULL;
        long n, tmp;
        cin >> n;
        for (int i = 0; i < n; i++) {
            cin >> tmp;
            push(&a, tmp);
        }
        a = mergeSort(a);
        printList(a);
    }
    return 0;
}  // } Driver Code Ends
